// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id              String      @id @default(uuid())
  status          String      @default("pending")
  totalWords      Int         @default(0)
  processedWords  Int         @default(0)
  currentWord     String?
  error           String?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  categories      Category[]
  languages       Language[]
  words           Word[]
  results         Result[]
}

model Category {
  id          Int         @id @default(autoincrement())
  sessionId   String
  name        String
  createdAt   DateTime    @default(now())
  
  session     Session     @relation(fields: [sessionId], references: [id], onDelete: Cascade)
}

model Language {
  id          Int         @id @default(autoincrement())
  sessionId   String
  name        String
  createdAt   DateTime    @default(now())
  
  session     Session     @relation(fields: [sessionId], references: [id], onDelete: Cascade)
}

model Word {
  id          Int         @id @default(autoincrement())
  sessionId   String
  originalWord String
  createdAt   DateTime    @default(now())
  
  session     Session     @relation(fields: [sessionId], references: [id], onDelete: Cascade)
}

model Result {
  id                  Int         @id @default(autoincrement())
  sessionId           String
  originalWord        String
  language            String?
  englishTranslation  String?
  category            String?
  processedAt         DateTime    @default(now())
  
  session             Session     @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  
  @@index([sessionId])
}
